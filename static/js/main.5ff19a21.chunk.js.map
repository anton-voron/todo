{"version":3,"sources":["components/TodoListItem/TodoListItem.js","components/TodoList/TodoList.js","components/AppHeader/AppHeader.js","components/SearchPanel/SearchPanel.js","components/ItemStatusFilter/ItemStatusFilter.js","components/ItemAddForm/ItemAddForm.js","components/App/App.js","index.js"],"names":["TodoListItem","_this$props","this","props","label","onDeleted","onToggleImportant","onToggleDone","important","classNames","done","react_default","a","createElement","className","onClick","type","Component","TodoList","_ref","todos","elements","map","item","index","arr","id","rest","Object","objectWithoutProperties","key","components_TodoListItem_TodoListItem","assign","AppHeader","toDo","SearchPanel","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","e","setState","term","target","value","state","placeholder","onChange","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","concat","ItemAddForm","onlabelChange","onSubmit","preventDefault","length","addItem","App","maxId","createTodoItem","deleteItem","todoData","idx","findIndex","el","before","slice","after","toConsumableArray","text","newItem","_ref2","console","log","togleProperty","propName","oldItem","objectSpread","defineProperty","_ref3","_ref4","toLowerCase","indexOf","_this$state","visibleItem","search","doneCount","todoCount","components_AppHeader_AppHeader","components_SearchPanel_SearchPanel","components_ItemStatusFilter_ItemStatusFilter","components_TodoList_TodoList","components_ItemAddForm_ItemAddForm","ReactDOM","render","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.5ff19a21.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './TodoListItem.css';\r\n\r\n\r\nclass TodoListItem extends Component {\r\n\t/*constructor() {\r\n\t\tsuper()\r\n\t\tthis.state={\r\n\t\t\tdone: false,\r\n\t\t\timportant: false\r\n\t\t}\r\n\t}*/\r\n\t\r\n\t/*onLabelClick = () => {\r\n\t\tthis.setState(({done}) => {\r\n\t\t\treturn {\r\n\t\t\t\tdone: !done\r\n\t\t\t};\r\n\t\t})\r\n\t};\r\n\tonMarkImportant = () => {\r\n\t\t//Иногда функция state может работаь ассинхронно, \r\n\t\t//состояние может быть установленно позже, поэтому делаем дополнительную функцию (({important}) => {})\r\n\t\tthis.setState(({important}) => { //Деструктурируем important из объекта\r\n\t\t\treturn {\r\n\t\t\t\timportant: !important\r\n\t\t\t};\r\n\t\t}); \r\n\t};*/\r\n\trender () {\r\n\t\tconst { label, onDeleted, \r\n\t\t\t\tonToggleImportant, onToggleDone,\r\n\t\t\t\timportant, done\r\n\t\t\t   } = this.props; // принимаем в пропс функцию которую передали из App в TodoList\r\n\t\t/*const {done, important} = this.state;*/\r\n\r\n\t\tlet classNames = \"todo-list-item\";\r\n\t\tif(done) {\r\n\t\t\tclassNames += \" done\"\r\n\t\t}\r\n\r\n\t\tif(important) {\r\n\t\t\tclassNames += \" important\"\r\n\t\t}\r\n\t\t\t\r\n\treturn (\r\n\t\t<section className = {classNames} >\r\n\t\t\t<span \r\n\t\t\t\tclassName = \"todo-list-item-label\"\r\n\t\t\t\tonClick = {onToggleDone}> \r\n\t\t\t\t{label}\r\n\t\t\t</span>\r\n\r\n\t\t\t<button type=\"button\"\r\n\t\t\t\tclassName=\"btn btn-outline-success btn-sm float-right\"\r\n\t\t\t\tonClick = {onToggleImportant}>\r\n\t\t\t\t<i className=\"fa fa-exclamation\"/>\r\n\t\t\t</button>\r\n\t\t\t<button type=\"button\"\r\n\t\t\t\tclassName=\"btn btn-outline-danger btn-sm float-right\"\r\n\t\t\t\t// при клике вызываем функцию которую передали  App ->TodoList -> TodolistItem props\r\n\t\t\t\tonClick= {onDeleted} > \r\n\t\t\t\t<i className=\"fa fa-trash-o\" />\r\n\t\t\t</button>\r\n\t\t</section>\r\n\t);\r\n\t}\r\n}\r\n\r\nexport default TodoListItem;","import React from 'react';\r\nimport TodoListItem from '../TodoListItem/TodoListItem.js';\r\nimport './TodoList.css';\r\n\r\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {\r\n\t\r\n\tconst elements = todos.map((item, index, arr) => {\r\n\r\n\t\tconst {id, ...rest} = item;\r\n\t\treturn (\r\n\t\t\t<li key={id} className=\"list-group-item\"> \r\n\t\t\t\t<TodoListItem {...rest} //Используем spread оператор, label: label, important: important\r\n\t\t\t\t\t/*label = {item.label}\r\n\t\t\t\t\timportant = {item.important}*/ \r\n\r\n/*Снизу слева пропс из TodoListitem*/   /*Снизу справа функция из App*/\t\t\r\n\t\t\tonDeleted = {() => onDeleted(id)} \r\n\t\t\t// Принимаем onDeleted из родительского файла App \r\n\t\t\t// и передаём функцию в качестве props при нажатии на копку (создаём первую TodoList -> TodoListItem)\r\n\t\t\tonToggleImportant = {() => onToggleImportant (id)}\r\n\t\t\tonToggleDone = {() => onToggleDone(id)}\r\n\t\t\t/>\r\n\t\t\t</li>);\r\n\t});\r\n\r\n\t/*const elements = todos.map(function (item, index, arr) {\r\n\t\treturn (\r\n\t\t\t<li>\r\n\t\t\t\t<TodoListItem\r\n\t\t\t\t\tlabel = {item.label}\r\n\t\t\t\t\timportant = {item.important} />\r\n\t\t\t</li>\r\n\t\t\t)\r\n\t});*/\r\n\treturn(\r\n\t\t<ul className =\"list-group todo-list\">\r\n\t\t\t{elements}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nexport default TodoList;"," import React from 'react';\r\n import './AppHeader.css'\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n  return (\r\n    <div className=\"app-header d-flex\">\r\n      <h1>Todo List</h1>\r\n      <h2>{toDo} more to do, {done} done</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\n export default AppHeader;","import React, { Component } from 'react';\r\nimport './SearchPanel.css';\r\n\r\nclass SearchPanel extends Component {\r\n\tconstructor () {\r\n    \tsuper()\r\n    \tthis.state = {\r\n    \t\tterm: \"\",\r\n    \t}\r\n  \t}\r\n  \tonSearchChange = (e) => {\r\n  \t\tthis.setState ({\r\n  \t\t\tterm: e.target.value\r\n  \t\t});\r\n  \t\tthis.props.onSearchChange(this.state.term);\r\n  \t}\r\n\r\n\trender () {\r\n\t\tconst searchText = 'Type here to search';\r\n\t\treturn (\r\n\t\t\t\t<input \r\n\t\t\t\t\tclassName = \"form-control search-input\"\r\n\t\t\t\t\tplaceholder = {searchText}\r\n\t\t\t\t\tonChange = {this.onSearchChange}\r\n\t\t\t\t\tvalue = {this.state.term}\r\n\t\t\t\t/>\r\n\t\t);\r\n\t}\r\n}  \r\n\t\r\n\r\nexport default SearchPanel;","import React, { Component } from 'react';\r\n\r\nimport './ItemStatusFilter.css';\r\n\r\nclass ItemStatusFilter extends Component {\r\n    buttons = [\r\n      { name: 'all', label: 'All'},\r\n      { name: 'active', label: 'Active'},\r\n      { name: 'done', label: 'Done'}\r\n    ];\r\n\r\n  render () {\r\n    const {filter, onFilterChange} = this.props;\r\n    const  buttons = this.buttons.map(({name, label}) => {\r\n      const isActive = filter === name;\r\n      const clazz =  isActive ? 'btn-info' : 'btn-outline-secondary';\r\n      return (\r\n          <button type=\"button\"\r\n                  className= {`btn ${clazz}`}\r\n                  key = {name}\r\n                  onClick = {() => onFilterChange (name)}>\r\n            {label}\r\n          </button>\r\n        );\r\n    });\r\n    return (\r\n      <div className=\"btn-group\">\r\n        {buttons}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default ItemStatusFilter;","import React, { Component } from 'react';\r\nimport './ItemAddForm.css';\r\n\r\nclass ItemAddForm extends Component {\r\n\tconstructor () {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tlabel: \"\"\r\n\t\t}\r\n\r\n\t}\r\n\tonlabelChange = (e) => {\r\n\t\tthis.setState ({\r\n\t\t\tlabel: e.target.value\r\n\t\t});\r\n\t}\r\n\tonSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif(this.state.label.length > 0)\r\n\t\tthis.props.addItem(this.state.label);\r\n\t\tthis.setState({\r\n\t\t\tlabel: ''\r\n\t\t});\r\n\t}\r\n\t\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<form className=\"item-add-form d-flex\"\r\n\t\t\t\tonSubmit = {this.onSubmit}>\r\n\t\t\t\t<input type=\"text\"\r\n\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\tonChange = {this.onlabelChange}\r\n\t\t\t\t\tplaceholder = \" What needs to be done\"\r\n\t\t\t\t\tvalue = {this.state.label} />\r\n\t\t\t\t<button className=\"btn btn-outline-secondary\"> \r\n\t\t\t\tAdd Item \r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ItemAddForm;","import React, { Component} from 'react';\r\nimport TodoList from '../TodoList/TodoList.js';\r\nimport AppHeader from '../AppHeader/AppHeader.js';\r\nimport Searchpanel from '../SearchPanel/SearchPanel.js';\r\nimport ItemStatusFilter from '../ItemStatusFilter/ItemStatusFilter.js';\r\nimport ItemAddForm from '../ItemAddForm/ItemAddForm.js'\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\n\tmaxId = 1;\r\n\tconstructor () {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\ttodoData: [\r\n\t\t\tthis.createTodoItem('Drink Coffee'),\r\n\t\t\tthis.createTodoItem('Make Awesome App'),\r\n\t\t\tthis.createTodoItem('Have a lunch'),\r\n\t\t\t  /*{label: 'Drink Coffee', important: false, id: 1},\r\n\t\t\t\t{label: 'Make Awesome App', important: true, id: 2},\r\n\t\t\t\t{label: 'Have a lunch', important: false, id: 3},*/\r\n\t\t\t],\r\n\t\t\tterm: '',\r\n\t\t\tfilter: 'all' // active , all , done\r\n\t\t}\r\n\t}\r\n\r\n\tcreateTodoItem = (label) => {  //Создаём функцию, которая будет добавл новый компонент в наш\r\n\t\t//todoDate, чтобы код не повторялся\r\n\t\treturn {\r\n\t\t\tlabel: label,\r\n\t\t\timportant: false,\r\n\t\t\tdone: false,\r\n\t\t\tid: this.maxId++\r\n\t\t}\r\n\t}\r\n\r\n\tdeleteItem = (id) => {\r\n\r\n\t\tthis.setState(({ todoData }) => { //Передаём функию, потому что нам нужно передать новый стейт (это старый масив без 1 элемента), \r\n\t\t\t//для этого нам нужно точно знать, какой именно был старый массив, поэтому новый сейт зависит от старого стейта ( не можем взять и передать объект)\r\n\t\t\tconst idx = todoData.findIndex((el) => el.id === id); // получаем индекс элемента, который собираемся удалять\r\n\r\n\t\t\tconst before = todoData.slice(0, idx); //Чтобы не изменять существующий массив в сйте мы копируем его до элемента, ктр собираемся удалить\r\n\t\t\t// а так же копируем после и создаём новый массив newArray\r\n\t\t\tconst after = todoData.slice(idx + 1);\r\n\r\n\t\t\tconst newArray = [...before, ...after];\r\n\t\t\t\r\n\t\t\treturn {\r\n\t\t\t\ttodoData: newArray //!!НУЖНО передать новый массив, нельзя изменять стейт напрямую!!!! Ни в коем случае нельзя изменять структуру данных, которую мы получаем внутрь setState\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\r\n\taddItem = (text) => {\r\n\t\t//Нужно сгенерировать id\r\n\t\t/*const newItem = {\r\n\t\t\tlabel: text,\r\n\t\t\timportant: false,\r\n\t\t\tid: this.maxId++\r\n\t\t}*/\r\n\t\tconst newItem = this.createTodoItem(text)\r\n\r\n\t\t// Добавить элемент в массив\r\n\t\tthis.setState (({todoData}) => {\r\n\t\t\tconst before = todoData.slice();\r\n\t\t\tconst newArray = [...before, newItem];\r\n\r\n\t\t\treturn {\r\n\t\t\t\ttodoData: newArray\r\n\t\t\t};\r\n\t\t})\r\n\t\tconsole.log('done' , text);\r\n\t};\r\n\r\n\ttogleProperty = (arr, id, propName) => {\r\n\t\tconst idx = arr.findIndex ((el) => el.id === id);\r\n\t\t\t// 1. Нужно обновить объектк, котоырй содержится в массиве\r\n\t\tconst oldItem = arr[idx];\r\n\t\tconst newItem = {...oldItem, // создали объект, у которого все теже свой ства и все теже значения, что и у oldItem\r\n\t\t\t[propName]: !oldItem[propName]}; // меняем значение done\r\n\t\t// 2. Нужно сконструировать новый массив\r\n\t\tconst before = arr.slice(0, idx); //Чтобы не изменять существующий массив в сйте мы копируем его до элемента, ктр собираемся удалить\r\n\t\t// а так же копируем после и создаём новый массив newArray\r\n\t\tconst after = arr.slice(idx + 1);\r\n\r\n\t\tconst newArray = [...before, \r\n\t\t\t\t\t\t  newItem, \r\n\t\t\t\t\t\t  ...after\r\n\t\t\t\t\t\t  ];\r\n\t\treturn newArray;\r\n\t};\r\n\r\n\tonToggleDone = (id) => {\r\n\t\tthis.setState(({todoData}) => {\r\n\t\t\treturn {\r\n\t\t\t\ttodoData: this.togleProperty(todoData, id, 'done') // Вызываем функцию togleProperty, которая возвращает новый массив и мы заменяет его в setState\r\n\t\t\t}\t\r\n\t\t});\r\n\t};\r\n\r\n\tonToggleImportant = (id) => {\r\n\t\tthis.setState(({todoData}) => {\r\n\t\t\treturn {\r\n\t\t\t\ttodoData: this.togleProperty(todoData, id, 'important')\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tsearch (arr, term) {\r\n\t\tif(term.length === 0) {\r\n\t\t\treturn arr\r\n\t\t} else {\r\n\t\t\t return arr.filter((el) => {\r\n\t\t\t\treturn el.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\tonSearchChange = (term) => {\r\n\t\tthis.setState({ term });\r\n\t};\r\n\r\n\tfilter (arr, filter) { \r\n\t\tswitch (filter) {\r\n\t\t\tcase 'all': return arr;\r\n\t\t\tcase 'active': return arr.filter((el, index, arr) => {\r\n\t\t\t\treturn el.done === false;\r\n\t\t\t});\r\n\t\t\tcase 'done': return arr.filter((el, index, arr) => {\r\n\t\t\t\treturn el.done;\r\n\t\t\t});\t\t}\r\n\t}\r\n\tonFilterChange = (filter) => {\r\n\t\tthis.setState({filter});\r\n\t}\r\n\r\n\t\r\n\trender () {\r\n\t\tconst {todoData, term, filter} = this.state;\r\n\t\tconst visibleItem = this.filter(this.search(todoData, term), filter);\r\n\t\tconst doneCount = todoData.filter((el)=> el.done).length; //создаёт новый массив, \r\n\t\t//в который войдут только те элементы el массива  todoData, для которых вызов callback(el, i, arr) возвратит true.\r\n\t\t//и получаем длину этого массива \r\n\t\tconst todoCount = todoData.length - doneCount;\r\n\t\treturn (\r\n\t\t\t<div className=\"todo-app\"> \r\n\t\t\t\t<AppHeader toDo={todoCount} done={doneCount} />\r\n\r\n\t\t\t\t<div className=\"top-panel d-flex\">\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Searchpanel onSearchChange = {this.onSearchChange} />\r\n\r\n\r\n\t\t\t\t\t<ItemStatusFilter \r\n\t\t\t\t\t\tfilter = {filter} \r\n\t\t\t\t\t\tonFilterChange={this.onFilterChange}/>\r\n\t\t\t\t\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<TodoList todos = {visibleItem}\r\n\t\t\t\t/*Регистрируем новый EventListener onDeleted, который получает id элемента, \r\n\t\t\t\tкоторый мы удаляем , эту функцию передаём в props TodoList, вызываем её при нажатии onClick в файле\r\n\t\t\t\tTodolistItem , который передаёт ёё из props в TodoList*/\r\n\r\n\t\t\t\tonDeleted = { this.deleteItem }\r\n\t\t\t\tonToggleImportant= {this.onToggleImportant}\r\n\t\t\t\tonToggleDone = {this.onToggleDone}/> \r\n\r\n\r\n\t\t\t\t<ItemAddForm addItem = {this.addItem}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App.js'\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}